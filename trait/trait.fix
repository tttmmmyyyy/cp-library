module CPLib.Trait;

// モノイドのトレイト
trait a : Monoid {
    // 単位元
    unit : a;
    // 演算
    // 
    // 非可換な場合は、`op(lhs, rhs)`という用法をします。
    // これは`rhs.op(lhs)`と同じなので、ドット演算子を使って`op`を呼び出すと左右が反転することに注意！
    op : a -> a -> a;
}

// 作用のトレイト
// 
// 右作用なのか左作用なのかは使う側が決める
trait a : Action {
    // 作用を受ける集合の型
    type Set a;
    // 作用
    act : a -> Set a -> Set a;
}

// 各型の無限大の値
trait a : Inf {
    inf : a;
}

impl I8 : Inf {
    inf = I8::maximum;
}

impl U8 : Inf {
    inf = U8::maximum;
}

impl I16 : Inf {
    inf = I16::maximum;
}

impl U16 : Inf {
    inf = U16::maximum;
}

impl I32 : Inf {
    inf = I32::maximum;
}

impl U32 : Inf {
    inf = U32::maximum;
}

impl I64 : Inf {
    inf = I64::maximum;
}

impl U64 : Inf {
    inf = U64::maximum;
}

impl F32 : Inf {
    inf = F32::infinity;
}

impl F64 : Inf {
    inf = F64::infinity;
}